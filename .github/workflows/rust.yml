name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: -D warnings

jobs:
  build:
    runs-on: [ self-hosted ]
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo clippy --all-targets -- -D clippy::all -D unused

  format:
    runs-on: [ self-hosted ]
    steps:
    - uses: actions/checkout@v3
    - name: Formatting
      run: cargo fmt --check

  documentation:
    runs-on: [ self-hosted ]
    steps:
    - uses: actions/checkout@v3
    - name: Documentation
      run: cargo doc --document-private-items

  tests:
    needs: build
    runs-on: [ self-hosted ]
    steps:
    - uses: actions/checkout@v3
    - name: Run unit tests
      run: cargo test
    - name: Run Rust+C integration test
      env: IDLC: "../target/deps/debug"
      run: |
        cargo build
        cargo test --manifest-path tests/Cargo.toml
        cargo test --manifest-path tests/Cargo.toml --release
        cargo clean --manifest-path tests/Cargo.toml && RUSTC_BOOTSTRAP=1 RUSTFLAGS="-Zsanitizer=address" CFLAGS="-fsanitize=address" cargo test --manifest-path tests/Cargo.toml  -Zbuild-std --target $(rustc -vV | awk '/^host/ { print $2 }')
        cargo clean --manifest-path tests/Cargo.toml && RUSTC_BOOTSTRAP=1 RUSTFLAGS="-Zsanitizer=address" CFLAGS="-fsanitize=address" cargo test --manifest-path tests/Cargo.toml  -Zbuild-std --target $(rustc -vV | awk '/^host/ { print $2 }') --release
